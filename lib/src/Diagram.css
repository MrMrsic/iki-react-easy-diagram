/* Diagram */
.react_fast_diagram_DiagramInner {
  width: 100%;
  height: 100%;
  position: relative;
  overflow: hidden;
  user-select: none;
  -webkit-user-select: none;
}

.react_fast_diagram_Layer {
  position: absolute;
  /* We cannot set it to 100% of parent (and there is not need in this) because if parent will be smaller than node
  then browser will try to shrink node */
  width: 1000px; 
  height: 1000px;
  top: 0;
  left: 0;
  overflow: visible;
  transform-origin: 0px 0px;
  /* useGestures hook use targetTouches instead of simply touches, 
  so we should set this property to Movable, otherwise if user put 
  one finger above Movable and another above DiagramInner, the hook 
  will not trigger pinch gesture */
  pointer-events: none;
}
/* Diagram */

/* Node */
.react_fast_diagram_NodeWrapper {
  position: absolute;
  top: 0;
  left: 0;
  width: fit-content;
  height: fit-content;
  pointer-events: auto;
}

.react_fast_diagram_NodeDefault {
  min-width: 10px;
  min-height: 10px;
  border-radius: 3px;
  background-color: white;
  border: #c2c2c2 solid 1px;
  display: flex;
  flex-direction: column;
  align-items: center;
}

.react_fast_diagram_NodeDefault_Hovered {
  border: #a5d1fc solid 1px;
}

.react_fast_diagram_NodeDefault_Selected {
  border: #7BBDFF solid 1px;
}

.react_fast_diagram_NodeLabel {
  padding: 5px 7px;
  text-align: center;
  margin: auto;
}
/* Node */

/* Background */
.react_fast_diagram_BackgroundWrapper {
  height: 100%;
  width: 100%;
  pointer-events: none;
}

.react_fast_diagram_Background {
  height: 100%;
  width: 100%;
}
/* Background */

/* MiniControl */
.react_fast_diagram_MiniControl_Default {
  position: absolute;
  height: fit-content;
  display: flex;
  flex-direction: column;
}

.react_fast_diagram_MiniControl_Btn {
  background-color: white;
  border: 1px solid rgb(209, 209, 209);
  color: black;
  padding: 2px;
  font-size: 16px;
  cursor: pointer;
  text-align: center;
}

@media (hover: hover) and (pointer: fine) {
  .react_fast_diagram_MiniControl_Btn:hover {
    background-color: rgb(228, 228, 228);
  }
}
/* MiniControl */

/* Port */
.react_fast_diagram_PortInnerDefault {
  width: 7px;
  height: 7px;
  background-color: white;
  border: 1px solid #c2c2c2;
  border-radius: 9999px;
}

.react_fast_diagram_PortInnerDefault_Hovered {
  cursor: pointer;
  border-color: #A0F251;
}

.react_fast_diagram_PortInnerDefault_Dragging {
  cursor: pointer;
  border-color: #A0F251;
}

.react_fast_diagram_PortInnerDefault_Invalid {
  cursor: pointer;
  border-color: #FF7B8F;
}

.react_fast_diagram_PortInnerDefault_NodeHovered {
  border-color: #a5d1fc;
}

.react_fast_diagram_PortInnerDefault_NodeSelected {
  border-color: #7BBDFF;
}

/* Port */

/* Link */
.react_fast_diagram_LinkDefault_Line {  
  fill: none;
  stroke-linecap: round;
  stroke: #c2c2c2;
  stroke-width: 1px;
}

.react_fast_diagram_LinkDefault_Line_Selected {
  stroke: #7BBDFF;
}

.react_fast_diagram_LinkDefault_Line_Hovered {
  stroke: #a1d0ff;
}

.react_fast_diagram_LinkDefault_SecondaryLine {
  stroke-width: 5px;
  stroke-opacity: 0;
  pointer-events: stroke;
  touch-action: none;
}

.react_fast_diagram_LinkDefault_SecondaryLine_Hovered {
  stroke-opacity: 0.22;
  cursor: pointer;
}
/* Link */

/* Drag and drop */
.react_fast_diagram_DragAndDropContainer {
  display: flex;
  flex-direction: column;
  padding: 20px;
  gap: 10px;
  overflow-y: auto;
  align-items: center;
}

.react_fast_diagram_DragAndDropItem {
  touch-action: none;
  user-select: none;
  width: fit-content;
  height: fit-content;
}

.react_fast_diagram_DragAndDropItem_Droppable {
  position: fixed;
}
/* Drag and drop */

/* Containers with gap between items */
.react_fast_diagram_flex_gap {
  --gap: 12px;
  display: flex;
  align-items: center;
  justify-content: center;
}

.react_fast_diagram_flex_gap_y {
  flex-direction: column;
  height: 100%;
}

.react_fast_diagram_flex_gap_y > * {
  margin: var(--gap) 0 0 0;
}

.react_fast_diagram_flex_gap_y > :first-child {
  margin: 0;
}

.react_fast_diagram_flex_gap_x {
  flex-direction: row;
  width: 100%;
}

.react_fast_diagram_flex_gap_x > * {
  margin: 0 0 0 var(--gap);
}

.react_fast_diagram_flex_gap_x > :first-child {
  margin: 0;
}
/* Containers with gap between items */

/* Utils */
.react_fast_diagram_touch_action_disabled {
  touch-action: none;
}
/* Utils */
