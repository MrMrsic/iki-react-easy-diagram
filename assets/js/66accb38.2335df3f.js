(self["webpackChunkwebsite"] = self["webpackChunkwebsite"] || []).push([[150],{

/***/ 6979:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "default": function() { return /* binding */ Example; }
});

// EXTERNAL MODULE: ../node_modules/react/index.js
var react = __webpack_require__(7378);
// EXTERNAL MODULE: ./src/pages/examples/_exampleWrapper.jsx
var _exampleWrapper = __webpack_require__(1713);
// EXTERNAL MODULE: ../node_modules/@docusaurus/theme-live-codeblock/src/theme/CodeBlock/index.js + 11 modules
var CodeBlock = __webpack_require__(1642);
// EXTERNAL MODULE: ./src/pages/examples/_diagramContainer.jsx + 1 modules
var _diagramContainer = __webpack_require__(1353);
;// CONCATENATED MODULE: ../node_modules/raw-loader/dist/cjs.js!./src/pages/examples/_linkMarkersDiagram.tsx
/* harmony default export */ var _linkMarkersDiagram = ("import React from 'react';\nimport {\n  componentDefaultType,\n  createLinkDefault,\n  createPortInnerDefault,\n  Diagram,\n} from 'react-easy-diagram';\nimport {\n  createArrowMarker,\n  createCircleMarker,\n} from 'react-easy-diagram/src/components/Markers';\n\nexport default function () {\n  return (\n    <Diagram\n      initState={{\n        nodes: [\n          {\n            id: 'node_1',\n            label: 'Node 1',\n            position: [300, 300],\n            type: 'output_horizontal',\n          },\n          {\n            id: 'node_2',\n            label: 'Node 2',\n            position: [520, 400],\n            type: 'input_output_horizontal',\n          },\n          {\n            id: 'node_3',\n            label: 'Node 3',\n            position: [520, 200],\n            type: 'input_horizontal',\n          },\n        ],\n        links: [\n          {\n            source: {\n              nodeId: 'node_1',\n              portId: 'output',\n            },\n            target: {\n              nodeId: 'node_2',\n              portId: 'input',\n            },\n            type: 'custom_arrow_link',\n          },\n          {\n            source: {\n              nodeId: 'node_1',\n              portId: 'output',\n            },\n            target: {\n              nodeId: 'node_3',\n              portId: 'input',\n            },\n          },\n          {\n            source: {\n              nodeId: 'node_3',\n              portId: 'input',\n            },\n            target: {\n              nodeId: 'node_2',\n              portId: 'output',\n            },\n          },\n        ],\n      }}\n      settings={{\n        ports: {\n          portComponents: {\n            default: createPortInnerDefault({\n              size: [10, 10],\n              opacity: 0,\n            }),\n          },\n        },\n        links: {\n          components: {\n            [componentDefaultType]: createLinkDefault({\n              // You can specify marker for each link state\n              markerEnd: {\n                default: 'default_arrow_marker', // There 6 built-in markers: 'default_{circle|arrow}_marker', 'default_{circle|arrow}_marker_selected', 'default_{circle|arrow}_marker_hovered'\n                hovered: 'default_arrow_marker_hovered',\n                selected: 'default_arrow_marker_selected',\n              },\n              // Or just using one marker for all states\n              markerStart: 'default_circle_marker',\n              // If you use markers it can be more attractive to disable hover effect\n              enableHoverEffect: false\n            }),\n            custom_arrow_link: createLinkDefault({\n              markerEnd: 'custom_arrow',\n              markerStart: {\n                default: 'custom_circle',\n                hovered: 'custom_circle_hovered',\n                selected: 'custom_circle_selected',\n              },\n            }),\n          },\n          // You can define your own markers\n          svgMarkers: [\n            // With built-in marker creators\n            createCircleMarker({\n              id: 'custom_circle',\n              radius: 6,\n              style: {\n                fill: 'grey',\n              },\n            }),\n            createCircleMarker({\n              id: 'custom_circle_selected',\n              radius: 6,\n              style: {\n                fill: 'yellow',\n              },\n            }),\n            createCircleMarker({\n              id: 'custom_circle_hovered',\n              radius: 6,\n              style: {\n                fill: 'yellow',\n                opacity: 0.5,\n              },\n            }),\n            createArrowMarker({\n              id: 'custom_arrow',\n              style: {\n                fill: 'red',\n              },\n            }),\n            // Or by providing any marker you like\n            () => (\n              <marker\n                id='my_circle_marker'\n                overflow='visible'\n                markerUnits='userSpaceOnUse'\n              >\n                <circle r={5} style={{ fill: 'red' }} />\n              </marker>\n            ),\n          ],\n        },\n      }}\n    />\n  );\n}\n");
// EXTERNAL MODULE: ../lib/dist/index.esm.js + 1 modules
var index_esm = __webpack_require__(4714);
;// CONCATENATED MODULE: ../lib/src/components/Markers.tsx
var CircleMarker=function CircleMarker(props){var _props$radius;var finalSettings={id:props.id,radius:(_props$radius=props.radius)!=null?_props$radius:2,style:Object.assign({stroke:'none',fill:'rgb(194, 194, 194)'},props.style)};return/*#__PURE__*/react.createElement("marker",{id:finalSettings.id,overflow:"visible",markerUnits:"userSpaceOnUse"},/*#__PURE__*/react.createElement("circle",{r:finalSettings.radius,style:finalSettings.style}));};function createCircleMarker(settings){return function(){return/*#__PURE__*/react.createElement(CircleMarker,settings);};}var ArrowMarker=function ArrowMarker(props){var _props$height,_props$width;var finalSettings={id:props.id,height:(_props$height=props.height)!=null?_props$height:10,width:(_props$width=props.width)!=null?_props$width:10,style:Object.assign({stroke:'none',fill:'rgb(194, 194, 194)'},props.style)};return/*#__PURE__*/react.createElement("marker",{id:finalSettings.id,overflow:"visible",markerUnits:"userSpaceOnUse",refX:"-0.5",orient:"auto"},/*#__PURE__*/react.createElement("path",{d:"M 0 0 -"+finalSettings.width+" -"+finalSettings.height/2+" -"+finalSettings.width+" "+finalSettings.height/2+" z",style:finalSettings.style}));};function createArrowMarker(settings){return function(){return/*#__PURE__*/react.createElement(ArrowMarker,settings);};}
;// CONCATENATED MODULE: ./src/pages/examples/_linkMarkersDiagram.tsx
/* harmony default export */ function examples_linkMarkersDiagram() {var _components;return/*#__PURE__*/react.createElement(index_esm.Diagram,{initState:{nodes:[{id:'node_1',label:'Node 1',position:[300,300],type:'output_horizontal'},{id:'node_2',label:'Node 2',position:[520,400],type:'input_output_horizontal'},{id:'node_3',label:'Node 3',position:[520,200],type:'input_horizontal'}],links:[{source:{nodeId:'node_1',portId:'output'},target:{nodeId:'node_2',portId:'input'},type:'custom_arrow_link'},{source:{nodeId:'node_1',portId:'output'},target:{nodeId:'node_3',portId:'input'}},{source:{nodeId:'node_3',portId:'input'},target:{nodeId:'node_2',portId:'output'}}]},settings:{ports:{portComponents:{default:(0,index_esm.createPortInnerDefault)({size:[10,10],opacity:0})}},links:{components:(_components={},_components[index_esm.componentDefaultType]=(0,index_esm.createLinkDefault)({// You can specify marker for each link state
markerEnd:{default:'default_arrow_marker',// There 6 built-in markers: 'default_{circle|arrow}_marker', 'default_{circle|arrow}_marker_selected', 'default_{circle|arrow}_marker_hovered'
hovered:'default_arrow_marker_hovered',selected:'default_arrow_marker_selected'},// Or just using one marker for all states
markerStart:'default_circle_marker',// If you use markers it can be more attractive to disable hover effect
enableHoverEffect:false}),_components.custom_arrow_link=(0,index_esm.createLinkDefault)({markerEnd:'custom_arrow',markerStart:{default:'custom_circle',hovered:'custom_circle_hovered',selected:'custom_circle_selected'}}),_components),// You can define your own markers
svgMarkers:[// With built-in marker creators
createCircleMarker({id:'custom_circle',radius:6,style:{fill:'grey'}}),createCircleMarker({id:'custom_circle_selected',radius:6,style:{fill:'yellow'}}),createCircleMarker({id:'custom_circle_hovered',radius:6,style:{fill:'yellow',opacity:0.5}}),createArrowMarker({id:'custom_arrow',style:{fill:'red'}}),// Or by providing any marker you like
function(){return/*#__PURE__*/react.createElement("marker",{id:"my_circle_marker",overflow:"visible",markerUnits:"userSpaceOnUse"},/*#__PURE__*/react.createElement("circle",{r:5,style:{fill:'red'}}));}]}}});}
;// CONCATENATED MODULE: ./src/pages/examples/linkMarkers.jsx
function Example(){return/*#__PURE__*/react.createElement(_exampleWrapper/* ExampleWrapper */.U,{title:"Link Markers Example"},/*#__PURE__*/react.createElement(_diagramContainer/* DiagramContainer */.G,null,/*#__PURE__*/react.createElement(examples_linkMarkersDiagram,null)),/*#__PURE__*/react.createElement(CodeBlock/* default */.Z,{className:"language-jsx"},_linkMarkersDiagram));}

/***/ })

}]);